{"version":3,"sources":["main/scoreBoard/TeamScore.jsx","main/Constants.js","main/utils/playerUtils.js","main/Score/ScoreTable.js","main/stats/Stats.js","main/overStatus/OverStatus.jsx","main/playingBatsman/PlayingBatsman.jsx","main/runs/RunsActions.js","main/runs/Runs.jsx","main/cricketGame/CricketGame.jsx","App.js","serviceWorker.js","main/utils/generalUtils.js","main/scoreBoard/TeamScoreReducer.js","main/mainReducer.js","index.js"],"names":["TeamScoreContainer","connect","state","teamScore","team1","isBatting","team2","dispatch","props","react_default","a","createElement","className","style","MainViewStyle","TeamRunStyle","teamBoldStyle","teamName","OverViewStyle","scoreBoldStyle","runs","wickets","currentOver","currentBall","fontWeight","fontSize","color","padding","justifyContent","flexDirection","display","getPlayerStats","player","overs","grouped","groupPlayerDetails","ball","batsmanName","batting","computeBattingDetails","bowling","computeBowlingDetails","playerId","keyGetter","dummyMap","Map","forEach","over","key","collection","get","push","set","undefined","reduce","sum","fours","filter","extras","type","length","sixes","balls","name","bowlerName","maiden","totalRuns","overAllSum","runsInThisOver","noOfWicketsInThisOver","sumOfWickets","out","BowlingScoreContainer","ownProps","teamPlayers","teamOvers","listOfBattingTeam","listOfPlayers","playerList","_PlayerUtil$getPlayer","PlayerUtil","battingPlayerList","_PlayerUtil$getPlayer2","isBattingScore","react_table_es","showPagination","data","defaultPageSize","columns","Header","id","accessor","d","Stats","Link","to","React","Component","OverStatus","overHistory","ballDescription","replace","bowlingTeam","currentBowler","protoTypes","Balls","PropTypes","arrayOf","object","isRequired","OverStatusContainer","battingTeam","newOver","ballsLength","isBowling","PlayingBatsmanConatiner","striker","nonStriker","actions","run","ballIndex","extraType","wicket","battingDisplayName","bowlerDisplayName","status","Runs","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","currentRun","oldBowler","isDropdownVisible","recordRuns","bind","assertThisInitialized","recordBalls","previousActiveButton","previousActiveExtraButton","outButton","nextProps","checkIfInningsOver","e","target","includes","setState","currentSelectedButton","parseInt","value","currentSelectedExtraButton","matchStatus","battingTeamOvers","bowlingTeamOvers","battingTeamWickets","bowlingTeamWickets","alert","updateWinnerStatus","hasBatted","toggleTeams","_this2","_this3","bowlers","getBowlers","oldBowlerId","bowler","_this4","updateCurrentBowler","p","map","label","_this5","index","onClick","storeRun","showExtras","extra","storeExtra","bowlerOptions","getAvailableBowlers","winnerStatus","recordWickets","disabled","updateBallCount","dist_default","options","onChange","placeholder","batsmanDisplayName","CricketGame","concat","runs_Runs","App","Switch","Route","path","component","Boolean","window","location","hostname","match","pushBallToOver","team1Players","isBattingDone","team2Players","initialState","mainReducer","combineReducers","_objectSpread9","arguments","action","changeStrike","objectSpread","defineProperty","_objectSpread3","newState","newOverList","overList","lastOver","pop","pushOverToOverList","isExtra","newPlayers","newBatsman","store","createStore","applyMiddleware","logger","ReactDOM","render","BrowserRouter","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db260383.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {TOTAL_OVERS} from \"../Constants\";\n\n export const TeamScore = (props) => {\n     let isBold = true;\n        return (\n            <div className=\"teamName-container\" >\n                <div className=\"team1-container\" style={MainViewStyle}>\n                    <div className=\"teamName\" style={TeamRunStyle}>\n                    <div style ={isBold ? teamBoldStyle : teamNormalStyle}>{props.team1.teamName}</div>\n                    </div>\n                    <div style={OverViewStyle}>\n                    <div className=\"teamScore\" style ={isBold ? scoreBoldStyle : scoreNormalStyle}>{props.team1.runs}/{props.team1.wickets}</div>\n                    <div className=\"inStatic\" style ={isBold ? teamBoldStyle : teamNormalStyle}> in </div>\n                        <div className=\"currentBallAndOver\" style={isBold ? scoreBoldStyle : scoreNormalStyle}>\n                            {props.team1.currentOver + '.'}{props.team1.currentBall + '/'}{TOTAL_OVERS}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"team2-container\" style={MainViewStyle}>\n                    <div className=\"teamName\" style={TeamRunStyle}>\n                        <div style ={isBold ? teamBoldStyle : teamNormalStyle}>{props.team2.teamName}</div>\n                    </div>\n                    <div style={OverViewStyle}>\n                        <div className=\"teamScore\" style ={isBold ? scoreBoldStyle : scoreNormalStyle}>{props.team2.runs}/{props.team2.wickets}</div>\n                        <div className=\"inStatic\" style ={isBold ? teamBoldStyle : teamNormalStyle}> in </div>\n                        <div className=\"currentBallAndOver\" style={isBold ? scoreBoldStyle : scoreNormalStyle}>\n                            {props.team2.currentOver + '.'}{props.team2.currentBall + '/'}{TOTAL_OVERS}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n}\n\nexport const mapStateToProps = (state) => {\n    if(state.teamScore.team1.isBatting){\n        return {\n        \n            team1 : state.teamScore.team1,\n            team2 : state.teamScore.team2\n        }\n    }\n    else{\n        return {\n        \n            team1 : state.teamScore.team2,\n            team2 : state.teamScore.team1\n        }\n    }\n    \n}\n\nexport const  mapDispatchToProps = (dispatch) => {\n    return {\n    }\n}\n\nexport const TeamScoreContainer =  connect(mapStateToProps, mapDispatchToProps)(TeamScore);\n\nconst teamBoldStyle = {\n    fontWeight: 'bold',\n    fontSize: '25px',\n    color: 'black',\n    padding: 3,\n    justifyContent: 'flex-start'\n};\n\n\nconst teamNormalStyle = {\n    fontWeight: 'normal',\n    fontSize: '25px',\n    color: 'black',\n    padding: 3,\n    justifyContent: 'flex-start'\n\n\n};\n\n\nconst scoreBoldStyle = {\n    fontWeight: 'bold',\n    fontSize: '25px',\n    color: 'black',\n    padding: 3,\n    justifyContent: 'flex-end'\n};\n\n\nconst scoreNormalStyle = {\n    fontWeight: 'normal',\n    fontSize: '25px',\n    color: 'black',\n    padding: 3,\n    justifyContent: 'flex-end'\n\n\n};\n\nconst MainViewStyle = {\n    flexDirection: 'row',\n    display: 'flex',\n    justifyContent: 'space-between'\n\n};\n\nconst OverViewStyle = {\n    flexDirection: 'row',\n    display: 'flex',\n\n};\nconst TeamRunStyle = {\n    flexDirection: 'row',\n    display: 'flex',\n\n};","export const teamOnePlayers =  [\n    {\n        playerId: '1-1',\n        name: \"Shikhar Dhawan\",\n        isBattingDone : true\n    }, {\n        playerId: '1-2',\n        name: \"Virendra Sehwag\",\n        isBattingDone : true\n\n    }, {\n        playerId: '1-3',\n        name: \"Yuvraj Singh\",\n        isBattingDone : false\n    }, {\n        playerId: '1-4',\n        name: \"Rohit Sharma\",\n        isBattingDone : false\n    }, {\n        playerId: '1-5',\n        name: \"Virat Kohli\",\n        isBattingDone : false\n    },  {\n        playerId: '1-6',\n        name: \"Ajinkya Rahane\",\n        isBattingDone : false\n    }, {\n        playerId: '1-7',\n        name: \"Sachin Tendulkar\",\n        isBattingDone : false\n    }, {\n        playerId: '1-8',\n        name: \"Gaumtam Gambhir\",\n        isBattingDone : false\n    }, {\n        playerId: '1-9',\n        name: \"Ashish Nehra\",\n        isBattingDone : false\n    }, {\n        playerId: '1-10',\n        name: \"Ashwin\",\n        isBattingDone : false\n    }, {\n        playerId: '1-11',\n        name: \"Anil Kumble\",\n        isBattingDone : false\n    }\n];\n\nexport const teamTwoPlayers = [\n    {\n        playerId: '2-1',\n        name: \"Wasim Akram\",\n        isBattingDone : true\n    }, {\n        playerId: '2-2',\n        name: \"Shahid Afridi\",\n        isBattingDone : true\n    }, {\n        playerId: '2-3',\n        name: \"Mohd. Sami\",\n        isBattingDone : false\n    }, {\n        playerId: '2-4',\n        name: \"Shohaib Malik\",\n        isBattingDone : false\n    }, {\n        playerId: '2-5',\n        name: \"Imzaman Ul Huq\",\n        isBattingDone : false\n    },  {\n        playerId: '2-6',\n        name: \"Akmal\",\n        isBattingDone : false\n    }, {\n        playerId: '2-7',\n        name: \"Ahmed Shehzad\",\n        isBattingDone : false\n    }, {\n        playerId: '2-8',\n        name: \"Asad Shafiq\",\n        isBattingDone : false\n    }, {\n        playerId: '2-9',\n        name: \"Azar Ali\",\n        isBattingDone : false\n    }, {\n        playerId: '2-10',\n        name: \"Fawad Alam\",\n        isBattingDone : false\n    }, {\n        playerId: '2-11',\n        name: \"Umar Akmal\",\n        isBattingDone : false\n    }\n]\nexport const TOTAL_OVERS = 2;","\n// Function to get the batting and bowling stats of the given player\nexport const getPlayerStats = (player, overs) => {\n    const grouped = groupPlayerDetails(overs, ball => ball.batsmanName)\n    return {\n        batting: computeBattingDetails(grouped, player),\n        bowling: computeBowlingDetails(player.playerId, overs)\n    }\n}\n\n\n\n\n/****\n * Local methods\n */\nconst groupPlayerDetails = (overs, keyGetter) => {\n    const dummyMap = new Map()\n    overs.forEach(over => {\n        over.forEach(ball => {\n            const key = keyGetter(ball)\n            const collection = dummyMap.get(key)\n            if(!collection) {\n                dummyMap.set(key, [ball])\n            } else {\n                collection.push(ball)\n            }\n        })\n    })\n    return dummyMap\n}\n\n\n\nconst computeBattingDetails = (grouped, player) => {\n    if(grouped.get(player.playerId) === undefined) return {}\n        return {\n            runs: grouped.get(player.playerId).reduce((sum, ball) => {\n                return sum + ball.runs\n            }, 0),\n            fours: grouped.get(player.playerId).filter(ball => {\n                return (ball.runs === 4 && ball.extras.type === '')\n            }).length,\n            sixes: grouped.get(player.playerId).filter(ball => {\n                return ball.runs === 6 && ball.extras.type === ''\n            }).length,\n            balls: grouped.get(player.playerId).filter(ball => {\n                return (ball.extras.type === '' || ball.extras.type === 'Lb' || ball.extras.type === 'B')\n            }).length\n        }\n}\n\nconst computeBowlingDetails = (name, overs) => {\n    return {\n        overs: overs.filter((over) => {\n            let updatedOver = over.filter(ball => {\n                return ball.bowlerName === name\n            })\n            return updatedOver.length !== 0\n        }).length,\n        maiden: overs.filter((over) => {\n            let maidenOver = over.filter(ball => {\n                if(ball.bowlerName === name) return ball.totalRuns === 0\n                else return false\n            })\n            return maidenOver.length === 6\n        }).length,\n        runs: overs.reduce((overAllSum, over) => {\n            let runsInThisOver = over.reduce((sum, ball) => {\n                if (ball.bowlerName === name) return sum + ball.totalRuns\n                return sum\n            }, 0)\n            if (runsInThisOver > 0) {\n                overAllSum += runsInThisOver\n            }\n            return overAllSum\n        }, 0),\n        wickets: overs.reduce((wickets, over) => {\n            let noOfWicketsInThisOver = over.reduce((sumOfWickets, ball) => {\n                if(ball.bowlerName === name) {\n                    if(ball.out) return sumOfWickets + 1\n                    return sumOfWickets\n                } else {\n                    return sumOfWickets\n                }\n            }, 0)\n            if(noOfWicketsInThisOver > 0) {\n                wickets += noOfWicketsInThisOver\n            }\n            return wickets\n        }, 0)\n    }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport * as PlayerUtil from \"../utils/playerUtils\";\n\n\nexport const BowlingScore = (props) => {\n        return (\n            <div>\n                <ReactTable\n                    showPagination={false}\n                    data={props.battingPlayerList}\n                    className=\"-striped -highlight\"\n                    defaultPageSize={3}\n                    columns={[\n                        {\n                            Header: \"Batting Table\",\n                            columns: [\n                                {\n                                    Header: \"Batsman\",\n                                    id: \"Batsman\",\n                                    accessor: d => d.name\n\n                                },\n                                {\n                                    Header: \"Runs\",\n                                    id: \"Runs\",\n                                    accessor: d => d.batting.runs\n                                },\n                                {\n                                    Header: \"Balls\",\n                                    id: \"Balls\",\n                                    accessor: d => d.batting.balls\n                                },\n                                {\n                                    Header: \"Fours\",\n                                    id: \"Fours\",\n                                    accessor: d => d.batting.fours\n                                },\n                                {\n                                    Header: \"Sixes\",\n                                    id: \"Sixes\",\n                                    accessor: d => d.batting.sixes\n                                },\n                                // {\n                                //     Header: \"StrikeRate\",\n                                //     id: \"StrikeRate\",\n                                //     accessor: d => d.bowling.strike\n                                // }\n                            ]\n                        }\n                    ]}/>\n                <ReactTable\n                    showPagination={false}\n                    data={props.playerList}\n                    className=\"-striped -highlight\"\n                    defaultPageSize={3}\n                    columns={[\n                        {\n                            Header: \"Bowling Table\",\n                            columns: [\n                                {\n                                    Header: \"Bowler Name\",\n                                    id: \"name\",\n                                    accessor: d => d.name\n\n                                },\n                                {\n                                    Header: \"Overs\",\n                                    id: \"overs\",\n                                    accessor: d => d.bowling.overs\n                                },\n                                {\n                                    Header: \"Maiden\",\n                                    id: \"Maiden\",\n                                    accessor: d => d.bowling.maiden\n                                },\n                                {\n                                    Header: \"Run\",\n                                    id: \"Run\",\n                                    accessor: d => d.bowling.runs\n                                },\n                                {\n                                    Header: \"Wickets\",\n                                    id: \"Wickets\",\n                                    accessor: d => d.bowling.wickets\n                                }\n                            ]\n                        }\n                    ]}/>\n            </div>\n        )\n    }\n\n\n\nexport const mapStateToProps = (state, ownProps) => {\n                let teamPlayers\n                let teamOvers\n                let listOfBattingTeam\n\n                if(state.teamScore.team1.isBatting) {\n                    teamOvers = state.teamScore.team1.overs\n                    teamPlayers = state.teamScore.team2.listOfPlayers\n                    listOfBattingTeam = state.teamScore.team1.listOfPlayers\n\n                } else {\n                    teamOvers = state.teamScore.team2.overs\n                    teamPlayers = state.teamScore.team1.listOfPlayers\n                    listOfBattingTeam = state.teamScore.team2.listOfPlayers\n                }\n\n\n                let playerStats = teamPlayers.filter(player => {\n                    const {bowling, batting } = PlayerUtil.getPlayerStats(player, teamOvers)\n                    player.bowling = bowling\n                    player.batting = batting\n                    if(player.bowling.overs > 0) return player\n                    return false\n                })\n                let battingPlayerList = listOfBattingTeam.filter(player => {\n                    const {bowling, batting} = PlayerUtil.getPlayerStats(player, teamOvers)\n                    player.bowling = bowling\n                    player.batting =  batting\n                    if(player.batting.runs > 0) return player\n                    return false\n                })\n    return {\n        playerList : playerStats,\n        battingPlayerList: battingPlayerList,\n        isBattingScore : ownProps.isBattingScore\n    }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {}\n}\n\nexport const BowlingScoreContainer = connect(mapStateToProps, mapDispatchToProps)(BowlingScore);\n","import React from 'react'\nimport './Stats.css'\nimport  {TeamScoreContainer} from '../scoreBoard/TeamScore'\nimport { Link } from 'react-router-dom'\nimport { BowlingScoreContainer } from '../Score/ScoreTable'\nimport {connect} from 'react-redux';\n\n\n\nclass Stats extends React.Component {\n    render () {\n        return (\n            <div className=\"container\">\n                <TeamScoreContainer />\n                <div className=\"button-stats\"><Link to=\"/\">Home</Link></div>\n                <BowlingScoreContainer isBattingScore ={false}/>\n\n            </div>\n        )\n    }\n}\n\nexport const mapStateToProps = (state) => {\n    if(state.teamScore.team1.isBatting){\n        return {\n        \n            team1 : state.teamScore.team1,\n            team2 : state.teamScore.team2\n        }\n    }\n    else{\n        return {\n        \n            team1 : state.teamScore.team2,\n            team2 : state.teamScore.team1\n        }\n    }\n}\n\n\n\nexport default connect(mapStateToProps, null) (Stats)\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport  './OverStatus.css'\n\n\nexport const OverStatus = (props) => {\n    let overHistory = [];\n    props.currentOver && props.currentOver.length && props.currentOver.forEach(ball => {\n        let ballDescription  = ''\n        if(ball['runs'] && ball['extras'].type)\n        {\n            ballDescription = ball['runs'] + ball['extras'].type\n        }\n        else if(ball['extras'].type) {\n            ballDescription = ball['extras'].type\n        }\n        else {\n            ballDescription = ball['runs']\n        }\n        if(ball['out'] === true) {\n            ballDescription = ballDescription + 'W'\n            ballDescription = ballDescription.replace('0','');\n        }\n        ballDescription = ballDescription + ' '\n        overHistory.push(ballDescription)\n    });\n\n    return (\n        <div className=\"overStatus-container\">\n            <div className=\"overStatus-main\">\n                <div>This Over</div>\n                <div className=\"over-history\">{overHistory}</div>\n            </div>\n            <div>\n                <b className =\"bowler-name\"> Bowler : {props.bowlingTeam.currentBowler && props.bowlingTeam.currentBowler.name}</b>\n            </div>\n            <div>\n            </div>\n        </div>\n    )\n}\n\n\nOverStatus.protoTypes = {\n    Balls: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\n\n\n// OverStatus Container\nconst mapStateToProps = (state) => {\n    let battingTeam = state.teamScore.team1.isBatting ? \"team1\" : \"team2\"\n    let overs = state.teamScore[battingTeam].overs\n    let newOver = overs[overs.length - 1]\n    let ballsLength = newOver && newOver.length\n    return {\n        currentOver: overs[overs.length - 1],\n        balls : ballsLength,\n        bowlingTeam : state.teamScore.team1.isBowling ? state.teamScore.team1 : state.teamScore.team2\n    }\n}\n\nconst mapDispatchToProps = (state) => {\n    return {\n\n    }\n}\n\nexport const OverStatusContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OverStatus)","import React from 'react';\nimport { connect } from 'react-redux'\nimport './PlayingBatsman.css'\n\n\nexport const PlayingBatsman = (props) => {\n\n    return (\n        <div className = \"batsman\">\n            <b> This Ball &nbsp;</b>\n            <button className= \"batsman-striker\">{props.battingTeam.striker.name}</button>\n            <button className= \"batsman-nonStriker\">{props.battingTeam.nonStriker.name}</button>\n        </div>\n    )\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        battingTeam : state.teamScore.team1.isBatting ? state.teamScore.team1 : state.teamScore.team2\n    }\n}\n\nconst mapDispatchToProps = (state) => {\n    return {\n\n    }\n}\n\nexport const PlayingBatsmanConatiner = connect(\n    mapStateToProps,\n    mapDispatchToProps)(PlayingBatsman)","\nconst recordRuns = (run) => ({\n    type: \"UPDATE_RUNS\",\n    run\n});\n\nconst recordBalls = (name, ballIndex, runs, extraType , wicket, batsmanName, battingDisplayName, bowlerDisplayName) => ({\n    type: \"UPDATE_BALLS\",\n    name,\n    ballIndex,\n    runs,\n    extraType,\n    wicket,\n    batsmanName,\n    battingDisplayName,\n    bowlerDisplayName\n\n});\nconst toggleTeams = () => ({\n    type : \"TOGGLE_TEAM\",\n});\n\nconst updateCurrentBowler = (player) => ({\n    type: \"UPDATE_CURRENT_BOWLER\",\n    player\n});\n\nconst updateWinnerStatus = (status) => ({\n    type: \"UPDATE_WINNER_STATUS\",\n    status\n\n});\n\n\n\nexport const actions = {\n    recordRuns,\n    recordBalls,\n    updateCurrentBowler,\n    toggleTeams,\n    updateWinnerStatus\n}","import React, { Component } from 'react';\nimport {actions} from  './RunsActions'\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {TOTAL_OVERS} from \"../../main/Constants\";\nimport Dropdown from 'react-dropdown';\nimport './runs.css';\n\nclass Runs extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentRun : 0,\n            ballIndex : this.props.battingTeam.currentBall,\n            extraType: '',\n            currentBowler : this.props.bowlingTeam.currentBowler,\n            oldBowler : null,\n            isDropdownVisible : false,\n            wicket : false,\n        }\n        this.recordRuns = this.recordRuns.bind(this)\n        this.recordBalls = this.props.recordBalls.bind(this)\n        this.previousActiveButton = null\n        this.previousActiveExtraButton = null\n        this.outButton = null;\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(this.state.ballIndex !== 6) {\n            this.checkIfInningsOver(nextProps) \n        }\n    }\n\n    recordWickets(e) {\n        this.outButton =e.target\n        if(this.outButton.className.includes(' active')) {\n            this.outButton.className = this.outButton.className.replace(' active','')\n            this.setState({\n                wicket: false\n            })\n\n        }else {\n            this.outButton.className = this.outButton.className + ' active'\n            this.setState({\n                wicket: true\n            })\n        }\n\n    }\n\n    storeRun(e) {\n        this.currentSelectedButton = e.target\n        if(this.previousActiveButton !== null) {\n            this.previousActiveButton.className = 'button-number'\n        }\n        this.currentSelectedButton.className = this.currentSelectedButton.className + ' active'\n        this.previousActiveButton = e.target\n        this.setState({\n            currentRun: parseInt(e.target.value)\n        })\n    }\n\n    storeExtra(e){\n        this.currentSelectedExtraButton = e.target\n        if(this.previousActiveExtraButton !== null) {\n            this.previousActiveExtraButton.className = 'button-number'\n        }\n        this.currentSelectedExtraButton.className = this.currentSelectedExtraButton.className + ' active'\n        this.previousActiveExtraButton = e.target\n\n        this.setState({\n            extraType: e.target.value\n        })\n    }\n\n    checkIfInningsOver(props){\n        let battingTeamOvers = props.battingTeam.currentOver\n        let bowlingTeamOvers = props.bowlingTeam.currentOver\n        let battingTeamWickets = props.battingTeam.wickets\n        let bowlingTeamWickets = props.bowlingTeam.wickets\n        let matchStatus;\n        if((battingTeamOvers === TOTAL_OVERS && bowlingTeamOvers === TOTAL_OVERS) ||\n            (battingTeamWickets === 10 && bowlingTeamWickets === 10)) {\n            if(props.battingTeam.runs === props.bowlingTeam.runs){\n                matchStatus = \"Draw\"\n            }\n            else {\n                matchStatus = props.battingTeam.runs > props.bowlingTeam.runs ? props.battingTeam.teamName + \" wins\" : props.bowlingTeam.teamName +\" wins\"\n            }\n            alert(matchStatus);\n            this.props.updateWinnerStatus(matchStatus)\n        }\n       \n        else if(props.bowlingTeam.hasBatted && (props.battingTeam.runs > props.bowlingTeam.runs)) {\n            matchStatus =  props.battingTeam.teamName + \" wins\"\n            alert(matchStatus);\n            this.props.updateWinnerStatus(matchStatus)\n        }\n\n        else if(props.bowlingTeam.hasBatted && (props.battingTeam.wickets === 10)) {\n            matchStatus =  props.bowlingTeam.teamName + \" wins\"\n            alert(matchStatus);\n            this.props.updateWinnerStatus(matchStatus)\n        }\n\n        else if((props.battingTeam.currentOver === TOTAL_OVERS) || props.battingTeam.wickets === 10){\n            props.toggleTeams()\n        }\n    }\n\n    updateBallCount(){\n        if(this.previousActiveButton !== null) this.previousActiveButton.className = 'button-number'\n        if(this.previousActiveExtraButton !== null) this.previousActiveExtraButton.className = 'button-number'\n        if(this.outButton !== null) {\n            this.outButton.className='button-number'\n        }\n        this.previousActiveButton = null\n        this.previousActiveExtraButton = null\n        \n        if(this.state.extraType === 'B' || this.state.extraType === 'Lb' || this.state.extraType ===''){\n            if (this.state.ballIndex < 6) {\n                this.setState({\n                    ballIndex: this.state.ballIndex + 1\n                }, () => {\n                    this.recordBalls(this.state.currentBowler, this.state.ballIndex, this.state.currentRun, this.state.extraType,this.state.wicket,this.props.battingTeam.striker.playerId,this.props.battingTeam.striker.name,this.props.bowlingTeam.currentBowler);\n                    this.recordRuns(this.state.currentRun)\n                    this.setState({\n                        extraType: '',  wicket: false\n                    })\n                    if(this.state.ballIndex === 6) {\n                        this.setState({\n                            oldBowler : this.state.currentBowler,\n                            currentBowler: null,\n                            ballIndex : 0\n                        })\n                    }\n                })\n            }\n        } else if(this.state.extraType === 'Wd' || this.state.extraType === 'Nb') {\n            this.recordRuns(this.state.currentRun) \n            this.recordBalls(this.state.currentBowler, this.state.ballIndex, this.state.currentRun, this.state.extraType,this.state.wicket );\n            this.setState({\n                extraType: '',\n                wicket: false\n            })\n        }\n\n        this.currentSelectedButton = null\n        this.currentSelectedExtraButton = null\n    }\n\n    recordRuns(){\n        let runs = 0\n        switch(this.state.extraType) {\n            case 'B':\n                runs = 0\n                break;\n            case 'Lb':\n                runs = 0\n                break;\n            case 'Wd':\n                runs = 1\n                break;\n            case 'Nb':\n                runs = 1\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            currentRun : this.state.currentRun + runs\n        }, () => {\n            this.props.recordRuns(this.state.currentRun)\n            this.setState({\n                currentRun: 0,\n                extraType: ''\n            })\n        })\n\n    }\n\n    getAvailableBowlers(){\n        let bowlers = this.getBowlers()\n        let oldBowler =  this.props.bowlingTeam.oldBowler\n        let oldBowlerId  = oldBowler && oldBowler.playerId\n        return bowlers.filter(bowler => bowler.value !== oldBowlerId)\n    }\n\n    updateCurrentBowler(player){\n        this.setState({\n            currentBowler : player.value,\n            isDropdownVisible : false\n        }, () => {\n            this.props.updateCurrentBowler(this.props.bowlingTeam.listOfPlayers.filter( p => p.playerId === player.value)[0])})   \n    }\n\n    getBowlers() {\n        return this.props.bowlingTeam.listOfPlayers.map( p => {\n            return {\n                value : p.playerId,\n                label : p.name\n            }\n        })\n    }\n\n    render() {\n        let runs = [];\n        for(let index =0 ;index< 8; index++){\n            runs.push(\n                <button key={index} className=\"button-number\" value ={index} onClick = {this.storeRun.bind(this)}>{index}</button>\n            )\n        }\n        let extras = [\"Wd\", \"Nb\", \"B\", \"Lb\"]\n            let showExtras = extras.map(extra =>\n            <button key={extra} className = \"button-number\" value ={extra} onClick = { this.storeExtra.bind(this) } > { extra }</button >\n        )\n\n        let bowlerOptions = this.getAvailableBowlers()\n       return (\n           <div className=\"runs\">\n                <div className = {this.props.winnerStatus ? \"non-clickable\": \"\"}>  \n                    <h1>Runs</h1>\n                        {runs}\n                    <br></br>\n                    <h1>Extra</h1>\n                        {showExtras}\n                        <br></br>\n                    <button key ={true} className=\"button-number\" onClick={ this.recordWickets.bind(this)}>\n                        Out\n                    </button>\n                    <br></br>\n                    <button className=\"button-next\" disabled={ this.props.bowlingTeam.currentBowler=== null  || this.props.bowlingTeam.currentBall === 6? true : false}\n                        onClick = {() => {this.updateBallCount()}}>\n                        Next Ball\n                    </button>\n                    <button className=\"button-next\" onClick = { () => this.setState({isDropdownVisible : true})}>\n                            Change Bowler\n                    </button>\n                    <p className={this.props.bowlingTeam.currentBowler === null? 'hidden': 'p'}>\n                            Selected Bowler : {this.props.bowlingTeam.currentBowler ? this.props.bowlingTeam.currentBowler.name : ''}\n                    </p>\n                    <div className={this.state.isDropdownVisible ? 'dropdown' : 'hidden'}>\n                        <Dropdown className=\"dropdown\" options={bowlerOptions} onChange={this.updateCurrentBowler.bind(this)}\n                            value={''} placeholder=\"Select next bowler\" />\n                    </div>\n                        <br/>\n                </div>\n                <div className=\"button-stats\">\n                    <Link to=\"/stats\">\n                        <h3>Score Card</h3>\n                    </Link>\n                </div>\n           </div>\n       )\n    }\n}\n\nexport const mapStateToProps = (state) => {\n    return {\n        bowlingTeam : state.teamScore.team1.isBowling ? state.teamScore.team1 : state.teamScore.team2,\n        battingTeam : state.teamScore.team1.isBatting ? state.teamScore.team1 : state.teamScore.team2,\n        winnerStatus : state.teamScore.winnerStatus\n    }\n}\n\nexport const  mapDispatchToProps = (dispatch) => {\n    return {\n        recordRuns : function(run) {\n            dispatch(actions.recordRuns(run))\n        },\n        updateCurrentBowler : function(player) {\n            dispatch(actions.updateCurrentBowler(player))\n        },\n        recordBalls : function(name, ballIndex, run ,extraType,wicket,batsmanName,batsmanDisplayName,bowlerDisplayName) {\n            dispatch(actions.recordBalls(name, ballIndex, run, extraType, wicket,batsmanName,batsmanDisplayName,bowlerDisplayName))\n        },\n        toggleTeams : function (){\n            dispatch(actions.toggleTeams())\n        },\n        updateWinnerStatus: function (winnerStatus){\n            dispatch(actions.updateWinnerStatus(winnerStatus))\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Runs);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport  {TeamScoreContainer} from '../scoreBoard/TeamScore'\nimport {OverStatusContainer} from '../overStatus/OverStatus'\nimport {PlayingBatsmanConatiner} from '../playingBatsman/PlayingBatsman'\nimport  Runs from '../runs/Runs'\nimport './CricketGame.css'\n\nclass CricketGame extends Component {\n    render() {\n        return (\n        <div className=\"container\">\n                <b>{this.props.winnerStatus ? `Result is ${this.props.winnerStatus }`: '' } </b>\n            <TeamScoreContainer />\n            <OverStatusContainer />\n            <PlayingBatsmanConatiner/>\n            <Runs/>\n        </div>\n        );\n    }\n}\n\nexport const mapStateToProps = (state) => {\n    return {\n            winnerStatus : state.teamScore.winnerStatus\n          }\n    }\nexport default connect(mapStateToProps)(CricketGame);","import React, { Component } from 'react';\nimport { Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport Stats from './main/stats/Stats'\nimport CricketGame from './main/cricketGame/CricketGame'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/stats\" component={Stats} />\n        <Route path=\"/\" component={CricketGame} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const createNewBall = (bowlerName, runs, extraType, wicket, batsmanName,batsmanDisplayName,bowlerDisplayName) => {\n     let extraRuns = (extraType=== \"Wd\" || extraType=== \"Nb\") ? 1 :0;\n    return {\n        bowlerName : bowlerName,\n        batsmanName: batsmanName,\n        runs : runs,\n        isExtra : extraType === '' ? false : true,\n        out : wicket,\n        extras : {\n            type : extraType,\n        },\n        batsmanDisplayName : batsmanDisplayName,\n        bowlerDisplayName : bowlerDisplayName,\n        totalRuns: extraRuns + runs\n    };\n}\n\nconst createNewOver = () => {\n    return []\n}\n\nconst pushBallToOver = (ball, over) => {\n    over.push(ball)\n    return over\n}\n\nexport const pushOverToOverList = (ball, overList, ballIndex) => {\n    let lastOver\n    if(overList.length) lastOver = overList.pop()\n    else lastOver = []\n    \n    if(ballIndex === 6) {\n        overList.push(pushBallToOver(ball, lastOver))\n        let newOver = createNewOver()\n        overList.push(newOver)\n    } else {\n        overList.push(pushBallToOver(ball, lastOver))\n    }\n\n    return overList\n}\n","import {createNewBall, pushOverToOverList} from '../utils/generalUtils'\nimport {teamOnePlayers,teamTwoPlayers} from \"../Constants\";\n\nconst team1Players = teamOnePlayers\n\nconst team2Players = teamTwoPlayers\n\nlet initialState = {\n    winnerStatus: \"\",\n    team1: {\n        teamName: 'India',\n        runs: 0,\n        wickets: 0,\n        currentBall: 0,\n        currentOver: 0,\n        overs : [],\n        isBatting : true,\n        isBowling : false,\n        listOfPlayers: team1Players,\n        currentBowler : null,\n        nonStriker : team1Players[1],\n        striker : team1Players[0],\n        oldBowler: null,\n        hasBatted: false\n    },\n    team2: {\n        teamName: 'Pak',\n        runs: 0,\n        wickets: 0,\n        currentBall: 0,\n        currentOver: 0,\n        overs: [],\n        isBatting : false,\n        isBowling : true,\n        listOfPlayers: team2Players,\n        currentBowler : null,\n        nonStriker : team2Players[1],\n        striker : team2Players[0],\n        oldBowler: null,\n        hasBatted: false\n    }\n\n}\n const getNextBatsman =(listOfPlayers)=>{\n    return listOfPlayers.filter(player => player.isBattingDone === false)[0]\n }\n\nexport const teamScore = (state = initialState, action) => {\n    let bowlingTeam  = state.team1.isBowling ? \"team1\" : \"team2\"\n    let battingTeam  = state.team1.isBatting ? \"team1\" : \"team2\"\n    let changeStrike = action.runs%2 ? true : false\n\n    switch(action.type) {\n        case \"UPDATE_RUNS\" :\n            return {\n                ...state,\n                [battingTeam] : {...state[battingTeam], runs: state[battingTeam].runs + action.run}\n            }\n\n        case \"UPDATE_BALLS\" :\n            let newState = state;\n            let ball = createNewBall(action.name, action.runs, action.extraType,action.wicket,action.batsmanName,action.batsmanDisplayName,action.bowlerDisplayName)\n            let newOverList = pushOverToOverList(ball, state[battingTeam].overs, action.ballIndex)\n\n\n            if(action.ballIndex === 6){\n                newState = {\n                    ...state,\n                    [battingTeam]: {...state[battingTeam], currentOver: state[battingTeam].currentOver+1, currentBall : 0, overs : newOverList },\n                    [bowlingTeam]: {...state[bowlingTeam], oldBowler : state[bowlingTeam].currentBowler , currentBowler :null }\n                }\n                changeStrike = true;\n            }\n            else if(action.extraType === 'Lb'  || action.extraType === 'B' || action.extraType ==='') {\n                newState = {\n                    ...state,\n                    [battingTeam]: {...state[battingTeam] , currentBall : state[battingTeam].currentBall + 1, overs : newOverList}\n                }\n            } else if (action.extraType === 'Wd' || action.extraType === 'Nb'){\n                newState = {\n                    ...state,\n                    [battingTeam]: {...state[battingTeam], overs : newOverList  }\n                }\n            }\n            if(changeStrike === true){\n                newState = {\n                    ...newState,\n                    [battingTeam]: {...newState[battingTeam], striker: newState[battingTeam].nonStriker , nonStriker: newState[battingTeam].striker }\n                }\n\n            }\n            if (action.wicket === true) {\n                let newPlayers = state[battingTeam].listOfPlayers.map(player => {\n                if(player.playerId === state[battingTeam].striker.playerId) {\n                       player.isBattingDone = true \n                    }\n                    return player\n                })\n                let newBatsman = getNextBatsman(newPlayers);\n                \n                return {\n                    ...newState,\n                    [battingTeam]: {...newState[battingTeam], wickets: newState[battingTeam].wickets+1, striker : newBatsman, listOfPlayers : newPlayers}\n                }\n            }\n\n            return newState;\n\n            case \"UPDATE_CURRENT_BOWLER\" :\n                    return {\n                        ...state,\n                        [bowlingTeam]: {...state[bowlingTeam], currentBowler: action.player }\n                    }\n            case \"TOGGLE_TEAM\":\n                return {\n                    ...state,\n                    [battingTeam] : {...state[battingTeam], isBatting : false, isBowling : true, hasBatted:true},\n                    [bowlingTeam] : {...state[bowlingTeam], isBatting : true , isBowling : false }\n                }\n            case \"UPDATE_WINNER_STATUS\":\n                return {\n                    ...state,\n                    winnerStatus: action.status\n                }\n            default:\n            return state;\n    }\n}\n","import {teamScore} from './scoreBoard/TeamScoreReducer';\nimport {combineReducers} from 'redux';\n\nexport const mainReducer = combineReducers({\n    teamScore\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, createStore} from 'redux';\nimport logger from 'redux-logger'\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom'\nimport {mainReducer} from './main/mainReducer'\n\nconst store = createStore(\n    mainReducer,\n    applyMiddleware(logger)\n)\n    \n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store = {store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}